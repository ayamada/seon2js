;;; -*- mode: clojure; coding: utf-8; -*-
;;; vim:set ft=clojure:
{:name op0077
 :version "0.1.0" ; TODO: Bump up automatically
 :description "sample game of seon2js"
 :homepage "https://github.com/ayamada/seon2js"
 :private true
 :author "ayamada"
 :devDependencies {seon        "0.1.0"
                   seon2js     "0.1.1"
                   ;;
                   rimraf      "5.0.5"
                   koa         "2.14.2"
                   koa-body    "6.0.1"
                   koa-static  "5.0.0"
                   "@koa/cors" "5.0.0"
                   google-closure-compiler "20230802.0.0"}
 :scripts {update-package.json "npx seon2json package.seon package.json"
           gcc-dump-test "npx google-closure-compiler --js scripts/gcc-sandbox.mjs --compilation_level ADVANCED_OPTIMIZATIONS --language_out ECMASCRIPT_2021"
           ;sync-asg "cp ../../../asg-player/asg-va99/asg-va99.min.mjs src/foreign/"
           ;; For run in develop
           http-api   "node scripts/http-api.js html"
           s2js-once  "npx seon2js --srcDir src --dstDir html/mjs"
           s2js-watch "npx seon2js --srcDir src --dstDir html/mjs --watch"
           s2js-clean "rimraf html/mjs"
           clean      "rimraf build www.zip html/mjs"
           ;; For deploy
           premake  "node scripts/update-isdev.js build/html/mjs/is-dev.mjs 0"
           postmake "node scripts/update-isdev.js build/html/mjs/is-dev.mjs 1"
           make     "cd build/html && google-closure-compiler --js 'mjs/**.js' --js 'mjs/**.mjs' --js ./m.js --js_output_file ./m.min.js --create_source_map ./m.min.js.map --compilation_level ADVANCED_OPTIMIZATIONS --assume_function_wrapper --allow_dynamic_import --language_in ECMASCRIPT_2021 --language_out ECMASCRIPT_2021 --output_wrapper '(()=>{%output%})()\n//# sourceMappingURL=m.min.js.map'"
           deploy-zip       "node scripts/update-version.js src/version.mjs && npm run clean && npm run s2js-once && node scripts/deploy-zip.js"
           deploy-http-test "npm run deploy-zip && node scripts/http-api.js build/html"
           ;; For internal develop
           link-seon    "cd ../../seon && npm link"
           link-seon2js "cd ../../seon2js && npm link"
           link-all     "npm run link-seon && npm run link-seon2js && npm link seon seon2js"
           unlink-all   "npm unlink seon seon2js && npm rm -g seon seon2js"
           distclean    "rimraf node_modules package-lock.json"}
 :license :Zlib}

