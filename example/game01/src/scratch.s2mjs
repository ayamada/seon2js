(import-all {"./scratch-dot.mjs" scratch-dot
             "./scratch-config.s2mjs" config
             "./scratch-resource.mjs" resource
             "./tick.mjs" tick
             "./version.mjs" version
             "./html/util.mjs" html-util
             "./html/initial-loading-dom.mjs" html-ild
             "./canvas/setup.mjs" canvas-setup
             "./canvas/gl/glfn.mjs" glfn
             "./canvas/gl/util.mjs" gl-util
             "./canvas/gl/texture.mjs" texture
             "./canvas/dot.mjs" dot
             "./widget/base.mjs" widget})


(constfn setup-tick! [gl]
  (const canvas gl.canvas)
  (const gl-clean!
    (glfn/fetchGlFn
     (fn $gl-clean! [gl]
       (let gl-clear-bit (gl-util/setupGlConfig gl config/gl-config))
       (return
        (fn [gl]
          (gl.viewport 0 0 canvas.width canvas.height)
          (set! gl-clear-bit (gl-util/setupGlConfig gl config/gl-config)) ; TODO: 理論上は、これを毎フレーム実行しなくてもよい筈だが…
          (gl.clear gl-clear-bit))))))
  (tick/registerTick
   (fn []
     ;; calculate this phase
     (dot/tickDot gl scratch-dot/rootDot)
     ;; render this phase
     (when (glfn/isReadyGl gl)
       (gl-clean! gl)
       (dot/renderDot gl scratch-dot/rootDot)
       (when-not (glfn/isReadyGl gl)
         ;; もし途中でcontext lostしていたら、
         ;; ここまでの描画を全て、glに頼らない手段で消す必要がある
         (gl.flush) ;; まだ動いているgl描画がない事を確実に保証する
         (const ctx (canvas.getContext "2d"))
         (ctx.clearRect 0 0 canvas.width canvas.height))))))


(export-constfn-async bootstrap []
  (html-ild.setDomId "initial-loading")
  (resource/mergeDict config/words)
  (html-util/setHtmlTitle config/words.titleText)
  (let gl)
  (try
    (set! gl (canvas-setup/setupAll config/canvas-setup-options))
    (catch e
      (console.log e)
      (return (html-ild/displayMessageInterim e.message))))
  (await (resource/loadAll gl))
  (resource/setupText gl)
  ;; 毎フレーム実行する処理のセットアップ
  (setup-tick! gl)
  ;; スクリーンに対するインタラクションのセットアップ
  (widget/registerButtonListeners gl scratch-dot/rootDot)
  ;(texture/testTaRegulation gl) ;; for debug
  (html-ild/hide))


;;; vim:set ft=clojure:
